#!/bin/bash
# -----------------------------------------------------------------------------
# nrnivmodl-core uses make to compile additonal mod files for coreneuron
# Copyright 2019 Blue Brain Project
# -----------------------------------------------------------------------------
set -e

APP_NAME=$(basename $0)
_PARENT="$(dirname $BASH_SOURCE)/.."
ROOTDIR=$(perl -e "use Cwd 'abs_path'; print abs_path('$_PARENT')")
MAKE_OPTIONS="MECH_NAME MECH_VERSION OUTPUT INCFLAGS LINKFLAGS MODS_PATH OPTMODS VERBOSE"
PARALLELISM=4

while getopts "n:v:o:i:l:p:chV" OPT; do
    case "$OPT" in
    n)
        params_MECH_NAME="$OPTARG";;
    v)
        params_MECH_VERSION="$OPTARG";;
    o)
        params_OUTPUT="$OPTARG";;
    i)
        params_INCFLAGS="$OPTARG";;
    l)
        params_LINKFLAGS="$OPTARG";;
    c)
        params_OPTMODS="";;
    V)
        params_VERBOSE=1;;
    p)
        PARALLELISM="$OPTARG";;
    h)
        echo "$APP_NAME [options, ...] [mods_path]"
        echo "Options:"
        echo "  -n <name>       Optionally add mech name to library, as suffix"
        echo "  -v <version>    Set libcorenrnmech version (default: 0.0)"
        echo "  -o <output_dir> Set the output dir (default: <arch>-core)"
        echo "  -i <incl_flags> Definitions passed to the compiler, typically '-I dir..'"
        echo "  -l <link_flags> Definitions passed to the linker, typically '-Lx -lylib..'"
        echo "  -c              Clean: Don't use any ADDITIONAL mod built-into coreneuron."
        echo "                  By default this only contains halfgap.mod"
        echo "  -V              Verbose: show commands executed by make"
        echo "  -p <n_procs>    Make parallelism. Default: 4"
        exit 0;;
    ?)
        exit 1;;
    esac
done

shift $(($OPTIND - 1))

if [ $# -gt 1 ]; then
    echo "Error: $APP_NAME expects at most one mod dir. See syntax: '$APP_NAME -h' "
    exit 1
fi

# If defined mods dir be in $1
# Note: due to bug #712 makefile wont handle mod dir with spaces, so we let it fail here
params_MODS_PATH=$1

make_params=()

for param in $MAKE_OPTIONS; do
    var="params_${param}"
    [ "${!var+x}" ] && make_params+=("$param=${!var}")
done

# warn if no mod files provided
ls "${params_MODS_PATH:-.}"/*.mod || echo "Warning: No mods found!"
(
    set -x
    make -j$PARALLELISM -f "${ROOTDIR}/share/coreneuron/nrnivmodl_core_makefile" "${make_params[@]}"
)

# Create a little script to call make install (relinks w right RPATH)
echo "#!/bin/bash
set -e
[ \$# -eq 1 ] || { echo 'Required install destination. Syntax: ' \$(basename \$0) '<directory>'; false; }
set -x
make -f '${ROOTDIR}/share/coreneuron/nrnivmodl_core_makefile' " $(printf "'%s' " "${make_params[@]}") "DESTDIR=\$1 install
" > nrnivmech_install.sh
chmod 755 nrnivmech_install.sh

echo "mods built successfully. Install script written to nrnivmech_install.sh"
